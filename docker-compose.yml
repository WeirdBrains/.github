version: '3.8'

services:
  # PostgreSQL for SSO backend
  sso-db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: sso_db
    ports:
      - "5432:5432"
    volumes:
      - sso-db-data:/var/lib/postgresql/data
      - ../sso_backend/ddl.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mandible-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL for main backend
  main-db:
    image: postgres:14
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: main_db
    ports:
      - "5433:5432"
    volumes:
      - main-db-data:/var/lib/postgresql/data
      - ../backend/ddl.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - mandible-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mandible-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # SSO Backend Service
  sso-backend:
    build:
      context: ../sso_backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=sso-db
      - DB_PORT=5432
      - DB_NAME=sso_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SENDGRID_API_KEY=your_sendgrid_api_key
      - SENDGRID_INVITE_TEMPLATE_ID=your_invite_template_id
      - SENDGRID_RESET_PASSWORD_TEMPLATE_ID=your_reset_password_template_id
      - SENDGRID_RESET_PASSWORD_URL=http://localhost:8000/reset-password
      - SENDGRID_FROM_EMAIL=noreply@weirdbrains.com
    ports:
      - "8080:8080"
    depends_on:
      sso-db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mandible-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Main Backend Service
  backend:
    build:
      context: ../backend
      dockerfile: Dockerfile
    environment:
      - DB_HOST=main-db
      - DB_PORT=5432
      - DB_NAME=main_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - SENDGRID_KEY=your_sendgrid_api_key
      - SENDGRID_TESTER_TEMPLATE=your_tester_template_id
      - SENDGRID_REGISTER_TEMPLATE=your_register_template_id
      - SENDGRID_RESET_PASSWORD=your_reset_password_template_id
    ports:
      - "8081:8080"
    depends_on:
      main-db:
        condition: service_healthy
      sso-backend:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - mandible-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Accounts Web App
  accounts:
    build:
      context: ../accounts
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    depends_on:
      - sso-backend
    networks:
      - mandible-network
    environment:
      - API_URL=http://sso-backend:8080

  # Mandible Web App
  mandible:
    build:
      context: ../mandible
      dockerfile: Dockerfile
    ports:
      - "8001:80"
    depends_on:
      - backend
      - accounts
    networks:
      - mandible-network
    environment:
      - API_URL=http://backend:8080
      - SSO_URL=http://sso-backend:8080

volumes:
  sso-db-data:
  main-db-data:
  redis-data:

networks:
  mandible-network:
    driver: bridge
